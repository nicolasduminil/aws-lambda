AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Chapter 6 samples
Globals:
  Function:
    Runtime: java11
    MemorySize: 512
    Timeout: 10
    #Tracing: Active
Parameters:
  BucketName:
    Type: String
    Description: The name of the S3 bucket in which the OpenAPI specification is stored
  #RoleArn:
    #Type: String
    #Description: The ARN of the IAM role to be used with Lambda functions
  Email:
    Type: String
Resources:
  SendMoneyQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: send-money-queue
      DelaySeconds: 0
      VisibilityTimeout: 120
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UserPoolName: Chapter9Users
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: true
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
  CognitoUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      Username: !Ref Email
      UserPoolId: !Ref CognitoUserPool
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: Chapter9UserPoolClient
      GenerateSecret: false
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH
  SendMoneyRestAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        send-money-api
      StageName:
        dev
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location:
              Fn::Join:
                - ''
                - - 's3://'
                  - Ref: BucketName
                  - '/openapi.yaml'
      Cors: "'*'"
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
  GetMoneyTransferOrdersFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMoneyTransferOrdersFunction
      CodeUri: functions/target/chapter6.jar
      Handler: fr.simplex_software.aws.lambda.functions.GetMoneyTransferOrders::handleRequest
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: SendMoneyRestAPI
            Path: /orders
            Method: GET
            Auth:
              Authorizer: CognitoAuthorizer
  GetMoneyTransferOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMoneyTransferOrderFunction
      CodeUri: functions/target/chapter6.jar
      Handler: fr.simplex_software.aws.lambda.functions.GetMoneyTransferOrder::handleRequest
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: SendMoneyRestAPI
            Path: /orders
            Method: GET
  CreateMoneyTransferOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        CreateMoneyTransferOrderFunction
      CodeUri: functions/target/chapter6.jar
      Handler: fr.simplex_software.aws.lambda.functions.CreateMoneyTransferOrder::handleRequest
      Policies: AmazonSQSFullAccess
      #Role: !Ref RoleArn
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: SendMoneyRestAPI
            Path: /orders
            Method: POST
            Auth:
              Authorizer: CognitoAuthorizer
  UpdateMoneyTransferOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        UpdateMoneyTransferOrderFunction
      CodeUri: functions/target/chapter6.jar
      Handler: fr.simplex_software.aws.lambda.functions.UpdateMoneyTransferOrder::handleRequest
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: SendMoneyRestAPI
            Path: /orders
            Method: PUT
            Auth:
              Authorizer: CognitoAuthorizer
  RemoveMoneyTransferOrderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        RemoveMoneyTransferOrderFunction
      CodeUri: functions/target/chapter6.jar
      Handler: fr.simplex_software.aws.lambda.functions.RemoveMoneyTransferOrder::handlerRequest
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId:
              Ref: SendMoneyRestAPI
            Path: /orders
            Method: DELETE
            Auth:
              Authorizer: CognitoAuthorizer
Outputs:
  ExportSendMoneyQueueReference:
    Value: !GetAtt SendMoneyQueue.Arn
    Export:
      Name: exp-send-money-queue
  ExportBucketNameReference:
    Value: !Ref BucketName
    Export:
      Name: exp-send-money-bucket
  ExportSendMoneyRestAPIReference:
    Value: !Sub "https://${SendMoneyRestAPI}.execute-api.${AWS::Region}.amazonaws.com"
    Export:
      Name: exp-send-money-rest-api
  CognitoID:
    Description: The Cognito UserPool ID
    Value: !Ref CognitoUserPool
  CognitoClientID:
    Description: The Cognito UserPool Client ID
    Value: !Ref CognitoUserPoolClient
  ApiUrl:
    Description: The API URL
    Value: !Sub "https://${SendMoneyRestAPI}.execute-api.${AWS::Region}.amazonaws.com"